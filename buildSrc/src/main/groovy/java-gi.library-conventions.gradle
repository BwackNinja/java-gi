/* Common build settings for Java-GI modules:
 * 
 * - Load java-library and maven-publish plugins
 * - Set maven repositories
 * - Load common dependencies
 * - Set group and Java-GI version number
 * - Set JDK version number
 * - Enable preview features
 * - Set common POM metadata
 */

import io.github.jwharm.javagi.operations.GenerateSourcesOperation;

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly 'org.jetbrains:annotations:24.+'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

group = 'io.github.jwharm.javagi'
version = '0.7-SNAPSHOT'

tasks.register('generateSources') {
    GenerateSourcesOperation.packageNames([
            GLib                     : 'org.gnome.glib',
            GObject                  : 'org.gnome.gobject',
            GModule                  : 'org.gnome.gmodule',
            Gio                      : 'org.gnome.gio',
            cairo                    : 'org.freedesktop.cairo',
            freetype2                : 'org.freedesktop.freetype',
            HarfBuzz                 : 'org.freedesktop.harfbuzz',
            Pango                    : 'org.gnome.pango',
            PangoCairo               : 'org.gnome.pango.cairo',
            GdkPixbuf                : 'org.gnome.gdkpixbuf',
            Gdk                      : 'org.gnome.gdk',
            Graphene                 : 'org.gnome.graphene',
            Gsk                      : 'org.gnome.gsk',
            Gtk                      : 'org.gnome.gtk',
            GtkSource                : 'org.gnome.gtksourceview',
            Adw                      : 'org.gnome.adw',
            Soup                     : 'org.gnome.soup',
            JavaScriptCore           : 'org.gnome.webkit.jsc',
            WebKit                   : "org.gnome.webkit",
            WebKitWebProcessExtension: "org.gnome.webkit.wpe",
            Gst                      : 'org.freedesktop.gstreamer',
            GstBase                  : 'org.freedesktop.gstreamer.base',
            GstAudio                 : 'org.freedesktop.gstreamer.audio',
            GstPbutils               : 'org.freedesktop.gstreamer.pbutils',
            GstVideo                 : 'org.freedesktop.gstreamer.video'
    ])
}

java {
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

sourceSets.main.java.srcDirs += ['build/generated/sources/java-gi']

tasks.named('compileJava') {
    options.compilerArgs += '--enable-preview'
    dependsOn generateSources
}

tasks.named('compileTestJava') {
    options.compilerArgs += '--enable-preview'
}

tasks.named('test') {
    // Don't run tests in Github action. The native libraries aren't installed.
    if (System.getenv('CI') != null || System.getenv('JITPACK') != null) {
        enabled = false
    }

    useJUnitPlatform()
    jvmArgs += '--enable-preview'
    jvmArgs += '--enable-native-access=ALL-UNNAMED'
    // Configure library path for Arch, Fedora, Debian/Ubuntu, and MacOS
    jvmArgs += '-Djava.library.path=/usr/lib64:/lib64:/lib:/usr/lib:/lib/x86_64-linux-gnu:/opt/homebrew/lib'
    // Uncomment on MacOS:
    // jvmArgs += '-XstartOnFirstThread'
}

tasks.named('javadoc') {
    // Do not generate javadoc for individual modules.
    // Javadoc is generated once for alle modules together (see top-level build file).
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                groupId = 'io.github.jwharm.javagi'
                description = 'Java language bindings for GObject-Introspection-based libraries'
                url = 'https://jwharm.github.io/java-gi/'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License, version 2.1'
                        url = 'https://www.gnu.org/licenses/lgpl-2.1.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jwharm'
                        name = 'Jan-Willem Harmannij'
                        url = 'https://github.com/jwharm'
                    }
                }
            }
        }
    }
}
