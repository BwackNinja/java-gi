import io.github.jwharm.javagi.operations.GenerateSourcesOperation;
import io.github.jwharm.javagi.patches.*;

plugins {
    id 'java-gi.library-conventions'
}

dependencies {
    api project(':glib')
}

version = "1.20-${version}"

tasks.named('generateSources') {
    def MODULE_INFO = """
        module org.freedesktop.gstreamer {
            requires static org.jetbrains.annotations;
            requires transitive org.gnome.glib;
            %s
        }
        """
    
    new GenerateSourcesOperation()
        .sourceDirectory(new File(girFilesLocation).toPath())
        .outputDirectory(buildDir.toPath().resolve('generated').resolve('sources').resolve('java-gi'))

        .source('Gst-1.0.gir', null, new GstPatch())
        .source('GstBase-1.0.gir', null, null)
        .source('GstAudio-1.0.gir', null, new GstAudioPatch())
        .source('GstPbutils-1.0.gir', null, null)
        .source('GstVideo-1.0.gir', null, null)

        .moduleInfo(MODULE_INFO)
        .execute()
}

tasks.named('javadoc') {
    options.linksOffline('https://jwharm.github.io/java-gi/glib', project(':glib').javadoc.outputDirectory.getAbsolutePath())
    dependsOn ':glib:javadoc'
}

tasks.named('compileJava') {
    dependsOn generateSources
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = name
            version = version
        }
    }
}
